// <auto-generated />
using System;
using BISTickerAPI.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BISTickerAPI.Migrations
{
    [DbContext(typeof(TickerDbContext))]
    [Migration("20181119165220_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BISTickerAPI.Entities.Coin", b =>
                {
                    b.Property<string>("Symbol")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Symbol");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("BISTickerAPI.Entities.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.ToTable("Exchange");
                });

            modelBuilder.Entity("BISTickerAPI.Entities.TickerEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("AskPrice");

                    b.Property<double?>("BaseVolume");

                    b.Property<double>("BidPrice");

                    b.Property<double?>("BuyBaseVolume");

                    b.Property<double?>("BuyVolume");

                    b.Property<double?>("Change");

                    b.Property<double?>("Close");

                    b.Property<int?>("ExchangeId");

                    b.Property<double?>("High");

                    b.Property<double>("LastPrice");

                    b.Property<double?>("Low");

                    b.Property<double?>("Open");

                    b.Property<string>("PairCoin1Symbol");

                    b.Property<string>("PairCoin2Symbol");

                    b.Property<double?>("SellBaseVolume");

                    b.Property<double?>("SellVolume");

                    b.Property<DateTime>("Timestamp");

                    b.Property<double?>("Volume");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeId");

                    b.HasIndex("PairCoin1Symbol");

                    b.HasIndex("PairCoin2Symbol");

                    b.ToTable("TickerEntries");
                });

            modelBuilder.Entity("BISTickerAPI.Entities.TickerEntry", b =>
                {
                    b.HasOne("BISTickerAPI.Entities.Exchange", "Exchange")
                        .WithMany()
                        .HasForeignKey("ExchangeId");

                    b.HasOne("BISTickerAPI.Entities.Coin", "PairCoin1")
                        .WithMany()
                        .HasForeignKey("PairCoin1Symbol");

                    b.HasOne("BISTickerAPI.Entities.Coin", "PairCoin2")
                        .WithMany()
                        .HasForeignKey("PairCoin2Symbol");
                });
#pragma warning restore 612, 618
        }
    }
}
